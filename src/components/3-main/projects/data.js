export const data = [
  {
    id: 1,
    title: "Administration Of Products",
    desc: "Administration of Products is a web application designed for managing product information using HTML, CSS, and JavaScript. This project enables users to perform CRUD (Create, Read, Update, Delete) operations on product data, providing a straightforward interface for efficient product administration. The application features a clean, user-friendly design with responsive layouts built using CSS. JavaScript is employed to handle dynamic interactions and data manipulation, ensuring seamless updates and management of product details. This tool is ideal for administrators seeking a simple yet effective solution for maintaining product inventories.",
    category: "JS",
    image: "/img/Products.jpg",
    deploy: "https://mousasalib.github.io/administrationOfProducts/",
    github: "https://github.com/MousaSalib/administrationOfProducts.git",
  },
  {
    id: 2,
    title: "To-Do-APP",
    desc: "Tasks App is a task management application built with Angular 16, designed to help users efficiently organize and track their tasks. This app features a modern and intuitive interface, leveraging Angular's latest technologies for a dynamic user experience. It utilizes Angular CLI for development, RxJS for reactive programming, and includes a comprehensive set of tools for testing and building. With scripts for local development, production builds, and testing, Tasks App is a robust solution for managing tasks and improving productivity.",
    category: "Angular",
    image: "/img/To-Do-List.jpg",
    deploy: "https://to-do-app-omega-sandy.vercel.app/",
    github: "https://github.com/MousaSalib/To_Do_App.git",
  },
  {
    id: 3,
    title: "Users APP",
    desc: "The Users App is an Angular-based web application designed for managing and displaying user information. Utilizing core Angular modules, the app provides a dynamic and responsive user interface, enhanced by Bootstrap for styling and Font Awesome for intuitive icons. It leverages RxJS for handling asynchronous operations and TypeScript for type safety and code quality. With development scripts for building, serving, and testing, the application is built to be scalable and maintainable, demonstrating proficiency in Angular and modern web development practices.",
    category: "Angular",
    image: "/img/Users.jpg",
    deploy: "https://users-app-amber.vercel.app/",
    github: "https://github.com/MousaSalib/UsersApp.git",
  },
  {
    id: 4,
    title: "Movie APP",
    desc: "This Move-App project is an Angular-based web application designed with modern web development practices. The app utilizes Angular’s core modules, including `@angular/core`, `@angular/router`, and `@angular/forms`, to create a dynamic and responsive user interface. It integrates Angular Material and Bootstrap for a sleek, consistent design and user-friendly components. The application is built and served using Angular CLI, with scripts for development, production builds, and automated testing using Karma and Jasmine. The app leverages RxJS for reactive programming, ensuring efficient data handling, and is optimized for performance with tools like `zone.js` and `tslib`.",
    category: "Angular",
    image: "/img/Movie.jpg",
    deploy: "https://movie-marvels.vercel.app/",
    github: "https://github.com/Mo-Rabi/MovieMarvels.git",
  },
  {
    id: 5,
    title: "My Portfolio In Angular",
    desc: "My Portfolio is a personal portfolio application built with Angular 16, showcasing your work, skills, and projects through a sleek and modern interface. Utilizing Angular's latest features, it offers a dynamic and responsive experience, supported by Bootstrap 5 for a mobile-friendly design and Font Awesome for enhanced visual elements. The app is equipped with Angular CLI for development, Jasmine and Karma for testing, and is ready for deployment using gh-pages. It features essential scripts for local development, production builds, and testing, making it a comprehensive tool for presenting your professional accomplishments.",
    category: "Angular",
    image: "/img/Portfolio.jpg",
    deploy: "https://my-portfolio-with-angular.vercel.app/",
    github: "https://github.com/MousaSalib/My_Portfolio_With_Angular.git",
  },
  {
    id: 6,
    title: "BLOG App",
    desc: "The Blog Project is a React-based web application designed for creating and managing blog content. It utilizes Material-UI (MUI) for styling and component design, providing a modern and visually appealing interface. The app is built with React, leveraging `react-router-dom` for smooth navigation between pages, and `@emotion/react` and `@emotion/styled` for custom styling, ensuring a consistent and polished look.This project incorporates essential tools like React Testing Library and Jest for rigorous testing, ensuring reliability and functionality. It also uses Material Icons to enhance the visual design with intuitive iconographyWith scripts set up for development, production builds, and testing, the application is optimized for performance and scalability. The integration of Web Vitals helps monitor and improve the app's performance, ensuring a fast, efficient, and responsive user experience across various browsers.",
    category: "React",
    image: "/img/Blog.jpg",
    deploy: "https://github.com/MousaSalib/Blog_App.git",
    github: "https://github.com/MousaSalib/Blog_App.git",
  },
  {
    id: 7,
    title: "Youtube Clone",
    desc: "The YouTube Clone project is a React-based web application designed to replicate the core functionalities of YouTube. Built with modern web development technologies, the app uses Material-UI (MUI) for styling, providing a sleek and responsive user interface. The application features video playback capabilities powered by `react-player` and dynamic content management using `axios` for API requests.Navigation within the app is handled by `react-router-dom`, ensuring smooth transitions between different sections. Custom styles are managed with `@emotion/react` and `@emotion/styled` to maintain a consistent design. The app includes essential testing tools like React Testing Library and Jest to ensure robust functionalityWith scripts set up for development, production builds, and testing, the project is optimized for performance, leveraging Web Vitals to monitor and enhance user experience across various browsers. This clone demonstrates my ability to build complex, interactive web applications with a focus on video content delivery and user engagement.",
    category: "React",
    image: "/img/Youtube.jpg",
    deploy: "https://youtube-clone-beryl-xi.vercel.app/",
    github: "https://github.com/MousaSalib/Youtube-Clone.git",
  },
  {
    id: 8,
    title: "Linkedin Clone",
    desc: "The LinkedIn Clone project is a web application developed as part of an assessment during my time at ITI, focusing on JavaScript and jQuery. This project replicates core features of LinkedIn, including user profiles, connections, and interactive posts. It showcases my ability to build dynamic and responsive user interfaces using JavaScript for functionality and jQuery for DOM manipulation and event handling. The project is a testament to my understanding of front-end development and my ability to create interactive web applications with a focus on user experience.",
    category: "JS",
    image: "/img/Linkedin.jpg",
    deploy: "https://mousasalib.github.io/Linkedin-Clone/",
    github: "https://github.com/MousaSalib/Linkedin-Clone.git",
  },
  {
    id: 9,
    title: "Shopping Cart",
    desc: "The Shopping Cart project is a React-based web application designed to simulate an online shopping experience. It uses React for building interactive and dynamic user interfaces, with `react-router-dom` managing the routing between different pages, ensuring a smooth and seamless user experience.The app's design is powered by Bootstrap and React-Bootstrap, providing a responsive and visually appealing interface that adapts well to various devices. The project includes essential testing tools like React Testing Library and Jest for ensuring the reliability and functionality of the application.With scripts set up for development, building, testing, and production, this app is optimized for performance and scalability. It also incorporates Web Vitals to monitor and improve the app's performance metrics, ensuring a fast and efficient user experience across all supported browsers.",
    category: "React",
    image: "/img/Shopping-Cart.jpg",
    deploy: "https://shopping-cart-nu-ten.vercel.app/",
    github: "https://github.com/MousaSalib/Shopping-Cart.git",
  },
  {
    id: 10,
    title: "Airbnb Clone",
    desc: "The Airbnb Clone project is a web application developed using Next.js, designed to mimic the functionality and design of Airbnb’s platform. The application is built with React and leverages Next.js for server-side rendering, fast page loads, and SEO optimization. It features a modern user interface styled with Tailwind CSS, ensuring a responsive and aesthetically pleasing design.Key functionalities include interactive maps using react-map-gl and mapbox-gl for location-based services, and date selection capabilities powered by react-date-range. The app also incorporates geolocation utilities with geolib and geo-lib to handle distance calculations and other geographical data. The build process is enhanced with PostCSS and Autoprefixer for cross-browser compatibility.With scripts for development, production builds, and linting, this project follows best practices in web development, making it a scalable and maintainable application.",
    category: "Next",
    image: "/img/Airbnb.jpg",
    deploy: "https://airbnb-clone-ti1j.vercel.app/",
    github: "https://github.com/MousaSalib/Airbnb-clone.git",
  },
  {
    id: 11,
    title: "Simple E-commerce App",
    desc: "This E-commerce web application is built using React, leveraging Redux Toolkit for efficient state management and React Router DOM for smooth navigation. It features a fully responsive design powered by Bootstrap and React-Bootstrap, enhanced with Font Awesome icons for a polished user interface. The app provides interactive user experiences using React Toastify and SweetAlert for notifications and alerts. It is rigorously tested with React Testing Library and Jest to ensure reliability, and performance is optimized using Web Vitals to deliver a fast and seamless user experience across devices.",
    category: "React",
    image: "/img/E-commerce.png",
    deploy: "https://simple-e-commerce-app.vercel.app/",
    github: "https://github.com/MousaSalib/Simple_E-commerce_App.git",
  },
  {
    id: 12,
    title: "Cloud Hosting App",
    desc: "Cloud Hosting Project is a full-stack web application built with Next.js 14 and React 18, designed to offer a comprehensive cloud hosting solution. The project integrates PostgreSQL for robust data management and Prisma for seamless database interaction. It features a responsive and intuitive interface, styled with TailwindCSS and enhanced with React Icons and React Toastify for a smooth user experience. The application supports secure authentication using JWT, and includes Axios for API interactions. With TypeScript and ESLint included in the development setup, it ensures high code quality and maintainability. This tool is ideal for users and developers seeking an advanced and user-friendly platform for managing cloud hosting environments.",
    category: "Next",
    image: "/img/Cloud-Hosting.webp",
    deploy: "https://cloud-hosting-app-amber.vercel.app/",
    github: "https://github.com/MousaSalib/Cloud-Hosting-App.git",
  },
  {
    id: 13,
    title: "Blog App",
    desc: "Blog App is a robust and secure web application built using Express.js for the backend, leveraging the power of MongoDB via Mongoose for efficient data handling. User authentication is managed securely with JWT (jsonwebtoken) and password hashing using bcrypt. File uploads, including images, are handled seamlessly with Multer, and Cloudinary integration allows for smooth image storage and retrieval. The app ensures error-free asynchronous operations through express-async-handler, and environmental variables are securely managed using dotenv. Input validation is enforced with Joi, making the app reliable and user-friendly. Development is streamlined with Nodemon for efficient real-time updates.",
    category: "Node",
    image: "/img/Blog_B.jpg",
    deploy: "https://github.com/MousaSalib/Backend_Blog_Project.git",
    github: "https://github.com/MousaSalib/Backend_Blog_Project.git",
  },
  {
    id: 14,
    title: "Sarahah Clone App",
    desc: "Sarahah Clone App project is a Node.js web application developed as a required task for ITI. It incorporates Express.js for the API structure, with MongoDB integrated via Mongoose for data management. The app ensures secure authentication using JWT (jsonwebtoken) and bcrypt for password hashing, while Joi provides robust input validation. Cross-origin resource sharing is managed with CORS, and environment variables are handled through dotenv for configuration. Additionally, Nodemailer is used for email functionalities, making this project a well-rounded solution for backend development tasks in ITI.",
    category: "Node",
    image: "/img/Sarahah_B.jpg",
    deploy: "https://github.com/MousaSalib/Sara7a-App.git",
    github: "https://github.com/MousaSalib/Sara7a-App.git",
  },
  {
    id: 15,
    title: "Full Authentication App",
    desc: "Full Authentication App application is a backend web project developed using Node.js and Express.js for building the API infrastructure. It integrates MongoDB through Mongoose to ensure efficient database management. The app focuses on security with features like password hashing using bcrypt and user authentication via JWT (jsonwebtoken). It also supports CORS for cross-origin requests and uses dotenv to manage environment variables securely. The cookie-parser module is included for handling cookies in the application. Development is made more efficient with the inclusion of Nodemon for real-time updates, making it suitable for backend services.",
    category: "Node",
    image: "/img/Auth_B.jpg",
    deploy: "https://github.com/MousaSalib/Full-Authentication-App.git",
    github: "https://github.com/MousaSalib/Full-Authentication-App.git",
  },
  {
    id: 16,
    title: "My Portfolio In React.js",
    desc: "This portfolio project, built with React.js, focuses on creating a responsive and interactive user interface. It uses Bootstrap, React-Bootstrap, Font Awesome, and Bootstrap Icons for styling and iconography. React Router DOM handles navigation, and React-Multi-Carousel adds carousels for showcasing projects. The project integrates Mailchimp subscriptions via React-Mailchimp-Subscribe and uses Animate.css for animations. Security is ensured with DomPurify, while Express and Cors manage server-side logic, and Nodemailer handles emails. Testing is done with React Testing Library and Jest, and gh-pages is used for deployment to GitHub Pages.",
    category: "React",
    image: "/img/PortfolioR.jpg",
    deploy: "https://frontend-part-portfolio-in-react.vercel.app/",
    github: "https://github.com/MousaSalib/frontend_part_portfolio_in_react.git",
  },
];
